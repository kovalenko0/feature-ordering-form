{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.module.ts","./src/app/app/app.component.css","./src/app/app/app.component.html","./src/app/app/app.component.ts","./src/app/editable-tree-view/editable-tree-view.component.css","./src/app/editable-tree-view/editable-tree-view.component.html","./src/app/editable-tree-view/editable-tree-view.component.ts","./src/app/editable-tree-view/inline-feature-editor/inline-feature-editor.component.css","./src/app/editable-tree-view/inline-feature-editor/inline-feature-editor.component.ts","./src/app/editable-tree-view/inline-feature-set-editor/inline-feature-set-editor.component.css","./src/app/editable-tree-view/inline-feature-set-editor/inline-feature-set-editor.component.ts","./src/app/feature-tree-editor-form/feature-tree-editor-form.component.ts","./src/app/feature-tree-editor-service/index.ts","./src/app/features-order-storage.ts","./src/app/features-storage.service.ts","./src/app/form-elements/numeric-input/numeric-input.component.ts","./src/app/order-form/order-form.component.css","./src/app/order-form/order-form.component.html","./src/app/order-form/order-form.component.ts","./src/app/shop-client.service.ts","./src/app/tree-view/tree-view.component.css","./src/app/tree-view/tree-view.component.html","./src/app/tree-view/tree-view.component.ts","./src/environments/environment.ts","./src/main.ts","./src/utils/array-utils.ts","./src/utils/containers/tree.ts","./src/utils/misc-utils.ts","./src/utils/object-utils.ts","./src/utils/observable-value/index.ts","./src/utils/traverse-tree.ts","./src/utils/validation.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVyD;AACjB;AACe;AAEL;AACiB;AACA;AACG;AACb;AACoC;AACiB;AAC7C;AACwD;AAC5B;AACuC;AAyBpI;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtBrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,wEAAY;gBACZ,yFAAiB;gBACjB,4FAAkB;gBAClB,mHAAyB;gBACzB,oIAA8B;gBAC9B,gJAA4B;gBAC5B,2JAA+B;gBAC/B,oHAAqB;aACtB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,8EAAgB;aACjB;YACD,SAAS,EAAE;gBACT,yFAAsB;gBACtB,+EAAiB;gBACjB,wFAAiB;aAClB;YACD,SAAS,EAAE,CAAC,wEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;ACvCtB,8BAA8B,0BAA0B,gBAAgB,KAAK,eAAe,8BAA8B,qBAAqB,yBAAyB,sBAAsB,uBAAuB,mBAAmB,wBAAwB,gEAAgE,gEAAgE,KAAK,YAAY,+BAA+B,2BAA2B,yBAAyB,6BAA6B,aAAa,KAAK,C;;;;;;;ACAnhB,ulB;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AAG2B;AACJ;AACf;AACmB;AAWpE;IACE,sBACU,eAAuC,EACvC,MAAkB;QADlB,oBAAe,GAAf,eAAe,CAAwB;QACvC,WAAM,GAAN,MAAM,CAAY;QAMrB,SAAI,GAAqB,MAAM;QAM/B,kBAAa,GAA6B,IAAI;QAVnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE;QAC3D,IAAI,CAAC,cAAc,GAAG,IAAI,qFAAoB,EAAE;IAClD,CAAC;IAUM,+BAAQ,GAAf;QACE,IAAI,CAAC,IAAI,GAAG,MAAM;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,wFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC;IAClE,CAAC;IAEM,kCAAW,GAAlB;QACE,IAAI,CAAC,IAAI,GAAG,OAAO;QACnB,IAAI,CAAC,cAAc,GAAG,IAAI,qFAAoB,EAAE;IAClD,CAAC;IAzBU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAG2B,yFAAsB;YAC/B,wEAAU;OAHjB,YAAY,CA0BxB;IAAD,mBAAC;CAAA;AA1BwB;;;;;;;;ACjBzB,yBAAyB,qBAAqB,KAAK,iCAAiC,wBAAwB,KAAK,eAAe,gCAAgC,gCAAgC,gCAAgC,gCAAgC,KAAK,sBAAsB,qBAAqB,gBAAgB,uBAAuB,KAAK,C;;;;;;;ACA5V,kEAAkE,oBAAoB,wzBAAwzB,0BAA0B,qCAAqC,2BAA2B,kIAAkI,6BAA6B,ggC;;;;;;;;;;;;;;;;;;;;;ACA/kC;AAIgE;AACnE;AASrD;IACE,mCACS,aAAgC;QADzC,iBAKC;QAJQ,kBAAa,GAAb,aAAa,CAAmB;QAgFlC,UAAK,GAAW,CAAC;QAGjB,aAAQ,GAAY,KAAK;QAEzB,SAAI,GAAuB,IAAI;QAiB/B,iBAAY,GAIf,IAAI;QAED,oBAAe,GAIlB,IAAI;QAED,uBAAkB,GAIrB,IAAI;QAED,uBAAkB,GAKrB,IAAI;QAED,0BAAqB,GAIxB,IAAI;QAED,mCAA8B,GAIjC,IAAI;QAED,sCAAiC,GAIpC,IAAI;QA7IN,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC;QAC3D,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAEO,+CAAW,GAAnB;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE;QAEhD,IAAI,CAAC,YAAY,GAAG,CAClB,IAAI,CAAC,IAAI,IAAI,IAAI;YACjB,IAAI,CAAC,KAAK,KAAK,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CACrB;YACC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;YACnB,CAAC,CAAC,IAAI;QAER,IAAI,CAAC,eAAe;YAClB,CACE,KAAK,CAAC,IAAI,KAAK,cAAc;gBAC7B,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CACrC;gBACC,CAAC,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW,EAAE;gBACpC,CAAC,CAAC,IAAI;QAEV,IAAI,CAAC,kBAAkB;YACrB,CACE,KAAK,CAAC,IAAI,KAAK,kBAAkB;gBACjC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CACrC;gBACC,CAAC,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW,EAAE;gBACpC,CAAC,CAAC,IAAI;QAEV,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,kBAAkB;gBACrB,CACE,IAAI,CAAC,IAAI;oBACT,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CACnB;oBACC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;oBACnB,CAAC,CAAC,IAAI;YAEV,IAAI,CAAC,qBAAqB;gBACxB,CACE,IAAI,CAAC,IAAI;oBACT,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CACrB;oBACC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;oBACnB,CAAC,CAAC,IAAI;QACZ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,kBAAkB,GAAG,IAAI;YAC9B,IAAI,CAAC,qBAAqB,GAAG,IAAI;QACnC,CAAC;QAED,EAAE,CAAC,CACD,KAAK,CAAC,IAAI,KAAK,cAAc;YAC7B,KAAK,CAAC,iBAAiB,IAAI,IAAI;YAC/B,KAAK,CAAC,iBAAiB,CAAC,MAAM,KAAK,IAAI,CAAC,IAC1C,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,8BAA8B,GAAG;gBACpC,WAAW,EAAE,KAAK,CAAC,WAAW;aAC/B;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,8BAA8B,GAAG,IAAI;QAC5C,CAAC;QAED,EAAE,CAAC,CACD,KAAK,CAAC,IAAI,KAAK,kBAAkB;YACjC,KAAK,CAAC,iBAAiB,IAAI,IAAI;YAC/B,KAAK,CAAC,iBAAiB,CAAC,MAAM,KAAK,IAAI,CAAC,IAC1C,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,iCAAiC,GAAG;gBACvC,WAAW,EAAE,KAAK,CAAC,WAAW;aAC/B;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,iCAAiC,GAAG,IAAI;QAC/C,CAAC;IACH,CAAC;IAWD,sBAAW,4CAAK;aAAhB,UAAiB,IAAiB;YAChC,IAAI,CAAC,IAAI,GAAG,IAAI;YAChB,IAAI,CAAC,WAAW,EAAE;QACpB,CAAC;;;OAAA;IAED,sBAAW,+CAAQ;aAAnB;YACE,IAAM,IAAI,GAAG,8EAAW,CAAC,IAAI,CAAC,IAAI,CAAC;YACnC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE;YAC3B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,EAAE;YACX,CAAC;QACH,CAAC;;;OAAA;IA6CM,wCAAI,GAAX;QACE,IAAM,IAAI,GAAG,8EAAW,CAAC,IAAI,CAAC,IAAI,CAAC;QAEnC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,IAAI,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC;QACjD,CAAC;IACH,CAAC;IAEM,0CAAM,GAAb;QACE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,IAAW,CAAC;IAC7C,CAAC;IA7ED;QADC,oEAAK,EAAE;;4DACgB;IAGxB;QADC,oEAAK,EAAE;;+DACwB;IAKhC;QADC,oEAAK,CAAC,MAAM,CAAC;;;0DAIb;IA7FU,yBAAyB;QALrC,wEAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;;SAGnC,CAAC;yCAGwB,uFAAiB;OAF9B,yBAAyB,CAgKrC;IAAD,gCAAC;CAAA;AAhKqC;;;;;;;;ACdtC,wBAAwB,kCAAkC,kCAAkC,2BAA2B,mCAAmC,oCAAoC,gCAAgC,gCAAgC,6BAA6B,8BAA8B,oCAAoC,KAAK,K;;;;;;;;;;;;;;;;;;;;ACAnR;AAEvB;AAqCxD;IACE;QAGO,gBAAW,GAA8B,IAAI;QAG7C,WAAM,GAAG,IAAI,mEAAY,EAAsB;QAG/C,WAAM,GAAG,IAAI,mEAAY,EAAsB;IATtC,CAAC;IAWV,mDAAY,GAAnB;QACE,IAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;QACvD,EAAE,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,sBAAW,+CAAK;aAAhB;YACE,MAAM,CAAC,8EAAW,CAAC,IAAI,CAAC,WAAW,CAAC;QACtC,CAAC;;;OAAA;IAjBD;QADC,oEAAK,EAAE;;qEAC4C;IAGpD;QADC,qEAAM,EAAE;;gEAC6C;IAGtD;QADC,qEAAM,EAAE;;gEAC6C;IAV3C,4BAA4B;QAnCxC,wEAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,QAAQ,EAAE,2sBA8BT;;SAEF,CAAC;;OACW,4BAA4B,CAsBxC;IAAD,mCAAC;CAAA;AAtBwC;;;;;;;;ACvCzC,wBAAwB,kCAAkC,kCAAkC,2BAA2B,mCAAmC,oCAAoC,gCAAgC,gCAAgC,6BAA6B,8BAA8B,oCAAoC,KAAK,K;;;;;;;;;;;;;;;;;;;;ACAnR;AAEvB;AA+BxD;IACE;QAGO,gBAAW,GAAiC,IAAI;QAGhD,WAAM,GAAG,IAAI,mEAAY,EAAyB;QAGlD,WAAM,GAAG,IAAI,mEAAY,EAAyB;IATzC,CAAC;IAWV,sDAAY,GAAnB;QACE,IAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;QACvD,EAAE,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,sBAAW,kDAAK;aAAhB;YACE,MAAM,CAAC,8EAAW,CAAC,IAAI,CAAC,WAAW,CAAC;QACtC,CAAC;;;OAAA;IAjBD;QADC,oEAAK,EAAE;;wEAC+C;IAGvD;QADC,qEAAM,EAAE;;mEACgD;IAGzD;QADC,qEAAM,EAAE;;mEACgD;IAV9C,+BAA+B;QA7B3C,wEAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;YACzC,QAAQ,EAAE,2hBAwBT;;SAEF,CAAC;;OACW,+BAA+B,CAsB3C;IAAD,sCAAC;CAAA;AAtB2C;;;;;;;;;;;;;;;;;;;;;;ACjCY;AACU;AACZ;AAatD;IACE;IAAgB,CAAC;IAGjB;QADC,oEAAK,EAAE;kCACc,uFAAiB;yEAAA;IAGvC;QADC,oEAAK,EAAE;kCACS,wEAAQ;oEAAqB;IAPnC,8BAA8B;QAV1C,wEAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;YACxC,QAAQ,EAAE,mIAMT;SACF,CAAC;;OACW,8BAA8B,CAQ1C;IAAD,qCAAC;CAAA;AAR0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfO;AACkB;AAEU;AACC;AAGjB;AA0B9D;IACE,2BAEU,KAA6B;QAA7B,UAAK,GAAL,KAAK,CAAwB;QAKhC,cAAS,GAAG,IAAI,gFAAe,CAAY,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;IAFnE,CAAC;IAGD,sBAAY,oCAAK;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;QAC7B,CAAC;aACD,UAAkB,KAAgB;YAChC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC;QAC3B,CAAC;;;OAHA;IAKM,kDAAsB,GAA7B,UAA8B,WAAwB;QACpD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,KAAK,GAAG;gBACX,IAAI,EAAE,cAAc;gBACpB,WAAW,EAAE,IAAI,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC;aACvD;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC;QAClF,CAAC;IACH,CAAC;IAEM,qDAAyB,GAAhC,UAAiC,cAA+C;QAC9E,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,KAAK,GAAG;gBACX,IAAI,EAAE,kBAAkB;gBACxB,WAAW,EAAE,IAAI,qBAAqB,CAAC,cAAc,EAAE,IAAI,CAAC;aAC7D;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC;QACtF,CAAC;IACH,CAAC;IAEM,sDAA0B,GAAjC,UAAkC,MAAsB;QACtD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,KAAK,GAAG;gBACX,IAAI,EAAE,cAAc;gBACpB,iBAAiB,EAAE;oBACjB,MAAM;iBACP;gBACD,WAAW,EAAE,IAAI,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC;aAClD;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC;QAClF,CAAC;IACH,CAAC;IAEM,yDAA6B,GAApC,UAAqC,MAAsB;QACzD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,KAAK,GAAG;gBACX,IAAI,EAAE,kBAAkB;gBACxB,iBAAiB,EAAE;oBACjB,MAAM;iBACP;gBACD,WAAW,EAAE,IAAI,qBAAqB,CAAC,IAAI,EAAE,MAAM,CAAC;aACrD;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC;QACtF,CAAC;IACH,CAAC;IAEM,kCAAM,GAAb,UAAc,IAAqB;QACjC,EAAE,CAAC,CACD,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MACtB,CAAC,CAAC,CAAC;YACD,IAAM,QAAM,GAAG,kFAAU,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,EAAE,IAAI,CAAC;YAClE,QAAM,CAAC,WAAW,CAAC,IAAI,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC;QACtE,CAAC;IACH,CAAC;IAEM,yCAAa,GAApB;QACE,EAAE,CAAC,CACD,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,cAAc;YAClC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,kBACtB,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,KAAK,GAAG;gBACX,IAAI,EAAE,MAAM;aACb;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,yFAAyF,CAAC;QAC5G,CAAC;IACH,CAAC;IAEM,uCAAW,GAAlB;QACE,EAAE,CAAC,CACD,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,cAAc;YAClC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,kBACtB,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE;YAC7B,IAAI,CAAC,KAAK,GAAG;gBACX,IAAI,EAAE,MAAM;aACb;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC;QAC1G,CAAC;IACH,CAAC;IAtGU,iBAAiB;QAEzB,gFAAM,CAAC,yFAAsB,CAAC;yCAChB,yFAAsB;OAH5B,iBAAiB,CAuG7B;IAAD,wBAAC;CAAA;AAvG6B;AAyG9B,IAAM,mBAAmB,GAAG;IAC1B,KAAK,EAAE,UAAC,IAAY,IAAK,WAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,EAArC,CAAqC;IAC9D,KAAK,EAAE,2DAA2D;CACnE;AAED;IACE,4BAAmB,IAAwB,EAAU,MAA6B;QAA/D,SAAI,GAAJ,IAAI,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAuB;QAChF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;QACzC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;IAC/C,CAAC;IAMM,6CAAgB,GAAvB;QACE,MAAM,CAAC,iFAAc,CACnB;YACE,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,EACD;YACE,IAAI,EAAE,mBAAmB;YACzB,KAAK,EAAE;gBACL,KAAK,EAAE,UAAC,CAAS,IAAK,QAAC,GAAG,CAAC,EAAL,CAAK;gBAC3B,KAAK,EAAE,+BAA+B;aACvC;SACF,CACF;IACH,CAAC;IAEM,uCAAU,GAAjB;QACE,IAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,EAAE;QAChD,EAAE,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,gBAAgB,CAAC,OAAO;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC;QAC7D,CAAC;IACH,CAAC;IAEM,iCAAI,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YACvB,MAAM;QACR,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;YACvC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACxC,CAAC;QACH,CAAC;IACH,CAAC;IAEM,wCAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI;IAC/C,CAAC;IACH,yBAAC;AAAD,CAAC;;AAED;IACE,+BAAmB,IAA2B,EAAU,MAA6B;QAAlE,SAAI,GAAJ,IAAI,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAuB;QACnF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;IAC3C,CAAC;IAIM,gDAAgB,GAAvB;QACE,MAAM,CAAC,iFAAc,CACnB,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EACnB,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAC9B;IACH,CAAC;IAEM,6CAAa,GAApB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC;gBACL,IAAI,EAAE,IAAI,CAAC,IAAI;aACF;QACjB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC;QACjE,CAAC;IACH,CAAC;IAEM,2CAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE;IACzB,CAAC;IAEM,oCAAI,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YACvB,MAAM;QACR,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE;YAC1C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YAC7C,CAAC;QACH,CAAC;IACH,CAAC;IACH,4BAAC;AAAD,CAAC;;;;;;;;;;;;;ACzOoD;AAEgB;AAErE;IACE;QAIQ,qBAAgB,GAAoC,EAAE;IAF9D,CAAC;IAIM,4CAAa,GAApB,UAAqB,OAAsC;QAA3D,iBAMC;QALC,kFAAY,CAAC,OAAO,EAAE,sBAAY;YAChC,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAC1B,gFAAY,CAAC,KAAI,CAAC,gBAAgB,EAAE,YAAY,CAAC;YACnD,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAEM,8CAAe,GAAtB,UAAuB,OAAsC;QAA7D,iBAMC;QALC,kFAAY,CAAC,OAAO,EAAE,sBAAY;YAChC,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAC1B,0EAAM,CAAC,KAAI,CAAC,gBAAgB,EAAE,YAAY,CAAC;YAC7C,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAEM,4CAAa,GAApB;QACE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,OAAO,IAAK,YAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAA7B,CAA6B,EAAE,CAAC,CAAC;IAC3F,CAAC;IAEM,uDAAwB,GAA/B,UAAgC,OAAsC;QAAtE,iBAmBC;QAlBC,IAAI,mBAAmB,GAAG,IAAI;QAC9B,IAAI,oBAAoB,GAAG,KAAK;QAEhC,kFAAY,CAAC,OAAO,EAAE,sBAAY;YAChC,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAC1B,IAAM,aAAa,GAAG,4EAAQ,CAAC,KAAI,CAAC,gBAAgB,EAAE,YAAY,CAAC;gBACnE,mBAAmB,GAAG,mBAAmB,IAAI,aAAa;gBAC1D,oBAAoB,GAAG,oBAAoB,IAAI,aAAa;YAC9D,CAAC;QACH,CAAC,CAAC;QAEF,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,UAAU;QACnB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,oBAAoB;QAC7B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,cAAc;QACvB,CAAC;IACH,CAAC;IACH,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACpDyC;AAE2C;AAErF,IAAM,aAAa,GAAG;IACpB;QACE,IAAI,EAAE,qBAAqB;QAC3B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,MAAM;aACb;YACD;gBACE,IAAI,EAAE,OAAO;aACd;YACD;gBACE,IAAI,EAAE,MAAM;aACb;SACF;KACF;IACD;QACE,IAAI,EAAE,qBAAqB;QAC3B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,eAAe;aACtB;YACD;gBACE,IAAI,EAAE,eAAe;gBACrB,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,YAAY;qBACnB;oBACD;wBACE,IAAI,EAAE,WAAW;qBAClB;oBACD;wBACE,IAAI,EAAE,sBAAsB;qBAC7B;iBACF;aACF;SACF;KACF;CACF;AAID;IACE;QAAA,iBAUC;QATC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE;QAC3B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAI,mBAAY,CAAC,OAAO,CAChE,aAAa,EACb,qFAAa,CACX,KAAI,CAAC,QAAQ,EACb,cAAI,IAAI,WAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAApB,CAAoB,EAC5B,cAAI,IAAI,WAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAApB,CAAoB,CAC7B,CACF,EAP6C,CAO7C,CAAC;IACJ,CAAC;IAEO,qCAAI,GAAZ;QACE,IAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;QAEtD,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,sBAAsB,CAAC,aAAa,CAAC;QAC9C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,uFAAe,CAAC,UAAU,EAAE,cAAI,IAAI,WAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAhB,CAAgB,EAAE,cAAI,IAAI,WAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAhB,CAAgB,CAAC;QACxF,CAAC;IACH,CAAC;IAIM,qDAAoB,GAA3B;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ;IACtB,CAAC;IA3BU,sBAAsB;QADlC,yEAAU,EAAE;;OACA,sBAAsB,CA4BlC;IAAD,6BAAC;CAAA;AA5BkC;AA8BnC,gCAAgC,QAAe,EAAE,IAAsC;IACrF,IAAM,MAAM,GAAG,IAAI,IAAI,IAAI,0EAAU,CAAsB,EAAE,IAAI,EAAE,wBAAwB,EAAE,EAAE,IAAI,CAAC;IAEpG,QAAQ,CAAC,OAAO,CAAC,iBAAO;QACtB,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YAC7B,IAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBACjC,IAAI,EAAE,OAAO,CAAC,IAAI;aACnB,CAAC;YACF,sBAAsB,CAAC,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC;QACrD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,OAAO,CAAC;gBACb,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,KAAK,EAAE,cAAc,EAAE;aACxB,CAAC;QACJ,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,CAAC,MAAM;AACf,CAAC;AAED;IACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AAC7C,CAAC;;;;;;;;;;;;;;;;;;;;ACjG8E;AAa/E;IACE;QAGO,UAAK,GAAkB,IAAI;QAG3B,gBAAW,GAAW,EAAE;QAGxB,eAAU,GAAG,IAAI,mEAAY,EAAiB;QAG9C,aAAQ,GAAG,IAAI,mEAAY,EAAW;IAZ7B,CAAC;IAcV,2CAAW,GAAlB,UAAmB,KAAa;QAC9B,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC;YAChC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;YAC3B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC;IAxBD;QADC,oEAAK,EAAE;;wDAC0B;IAGlC;QADC,oEAAK,EAAE;;8DACuB;IAG/B;QADC,qEAAM,EAAE;;6DAC4C;IAGrD;QADC,qEAAM,EAAE;;2DACoC;IAblC,qBAAqB;QAXjC,wEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,QAAQ,EAAE,uIAMT;YACD,MAAM,EAAE,EAAE;SACX,CAAC;;OACW,qBAAqB,CA6BjC;IAAD,4BAAC;CAAA;AA7BiC;;;;;;;;ACblC,wBAAwB,2BAA2B,2BAA2B,oBAAoB,KAAK,kBAAkB,uBAAuB,KAAK,gBAAgB,4BAA4B,KAAK,C;;;;;;;ACAtM,2JAA2J,umBAAumB,SAAS,oR;;;;;;;;;;;;;;;;;;;;;;ACAntB;AACQ;AACE;AAER;AAO1D;IACE,4BACU,MAAyB;QAAzB,WAAM,GAAN,MAAM,CAAmB;QAW5B,gBAAW,GAAY,KAAK;QAE5B,SAAI,GAAY,KAAK;QAkBrB,YAAO,GAAkB,IAAI;IA9BhC,CAAC;IAcL,sBAAW,wCAAQ;aAAnB;YACE,MAAM,CAAC,IAAI,CAAC,IAAI;QAClB,CAAC;;;OAAA;IAEM,mCAAM,GAAb;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,GAAG,KAAK;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI;QAEhB,IAAI;aACD,MAAM;aACN,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC;aAChC,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,EAAjC,CAAiC,CAAC;aACjD,KAAK,CAAC,cAAM,YAAI,CAAC,WAAW,GAAG,IAAI,EAAvB,CAAuB,CAAC;aACpC,IAAI,CAAC,cAAM,YAAI,CAAC,IAAI,GAAG,KAAK,EAAjB,CAAiB,CAAC;IAClC,CAAC;IAIM,wCAAW,GAAlB,UAAmB,IAAmC;QACpD,IAAI,CAAC,OAAO,GAAG,gBAAc,IAAI,CAAC,OAAO,CAAC,IAAM;IAClD,CAAC;IA/BD;QADC,oEAAK,EAAE;kCACe,qFAAoB;8DAAA;IAG3C;QADC,oEAAK,EAAE;kCACS,0EAAU;wDAAqB;IATrC,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAGkB,+EAAiB;OAFxB,kBAAkB,CAsC9B;IAAD,yBAAC;CAAA;AAtC8B;;;;;;;;;;;;;;;;;;;;;ACXW;AAEO;AAOjD;IACE,2BACU,MAAkB;QAAlB,WAAM,GAAN,MAAM,CAAY;IACxB,CAAC;IAEE,uCAAW,GAAlB,UAAmB,UAAgC;QAAnD,iBAwBC;QAvBC,MAAM,CAAC,IAAI,OAAO,CAChB,UAAC,OAAO,EAAE,MAAM;YACd,KAAI;iBACD,MAAM;iBACN,IAAI,CACH,oDAAoD,EACpD;gBACE,eAAe,EAAE,sCAAsC;gBACvD,UAAU,EAAE,UAAU,CAAC,aAAa,EAAE;gBACtC,QAAQ,EAAE,KAAK;gBACf,YAAY,EAAE,mBAAmB;gBACjC,YAAY,EAAE,GAAG;gBACjB,QAAQ,EAAE,IAAI;aACf,CACF;iBACA,SAAS,CACR,UAAC,MAAW,IAAK,cAAO,CAAC;gBACvB,OAAO,EAAE,MAAM,CAAC,QAAQ;aACzB,CAAC,EAFe,CAEf,EACF,MAAM,CACP;QACL,CAAC,CACF;IACH,CAAC;IA7BU,iBAAiB;QAD7B,yEAAU,EAAE;yCAGO,wEAAU;OAFjB,iBAAiB,CA8B7B;IAAD,wBAAC;CAAA;AA9B6B;;;;;;;;ACT9B,yBAAyB,qBAAqB,wBAAwB,KAAK,eAAe,gCAAgC,gCAAgC,gCAAgC,gCAAgC,KAAK,sBAAsB,qBAAqB,C;;;;;;;ACA1Q,8RAA8R,OAAO,iP;;;;;;;;;;;;;;;;;;;;ACAvN;AAId;AAShE;IACE;QAMO,UAAK,GAAW,CAAC;QAGjB,aAAQ,GAAY,KAAK;QAMzB,oBAAe,GAAG,IAAI,mEAAY,EAAe;IAfxC,CAAC;IAiBjB,sBAAW,uCAAQ;aAAnB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAChC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,EAAE;YACX,CAAC;QACH,CAAC;;;OAAA;IAED,sBAAW,oCAAK;aAAhB;YACE,MAAM,CAAC,CACL,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;gBACtB,CACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAClB,CAAC,CAAC,GAAG;oBACL,CAAC,CAAC,EAAE,CACP;gBACD,CACE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAChB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC3C,CAAC,CAAC,EAAE,CACP,CACF;QACH,CAAC;;;OAAA;IAED,sBAAW,uCAAQ;aAAnB;YACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,UAAU;QAC/E,CAAC;;;OAAA;IAED,sBAAW,gDAAiB;aAA5B;YACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,oBAAoB;QACzF,CAAC;;;OAAA;IAEM,yCAAa,GAApB,UAAqB,QAAiB;QACpC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;QAChD,CAAC;IACH,CAAC;IApDD;QADC,oEAAK,EAAE;kCACe,qFAAoB;6DAAA;IAG3C;QADC,oEAAK,EAAE;;oDACgB;IAGxB;QADC,oEAAK,EAAE;;uDACwB;IAGhC;QADC,oEAAK,EAAE;;mDACgB;IAGxB;QADC,qEAAM,EAAE;;8DAC+C;IAhB7C,iBAAiB;QAL7B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,iBAAiB,CAyD7B;IAAD,wBAAC;CAAA;AAzD6B;;;;;;;;;ACb9B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP4C;AAC4B;AAE9B;AACY;AAExD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE;AAClB,CAAC;AAED,yGAAsB,EAAE;KACrB,eAAe,CAAC,kEAAS,CAAC;KAC1B,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC;;;;;;;;;;;;;ACZ3B,kBAA6B,KAAiB,EAAE,IAAc;IAChE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,CAAC;AAEK,sBAAiC,KAAiB,EAAE,IAAc;IACpE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;IACpB,CAAC;IACD,MAAM,CAAC,KAAK;AAChB,CAAC;AAEK,kBAA6B,KAAiB;IAChD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACrB,MAAM,CAAC,IAAI;IACf,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAClC,CAAC;AACL,CAAC;AAEK,gBAA2B,KAAiB,EAAE,IAAc;IAC9D,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK;IAChB,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,IAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;QACxC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;QAC7B,MAAM,CAAC,KAAK;IAChB,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3B8D;AACf;AACiC;AAEjF;IACE,kBAAqB,MAAmD;QAAnD,WAAM,GAAN,MAAM,CAA6C;QACtE,IAAI,CAAC,aAAa,GAAG,IAAI,0EAAe,CAAuC,IAAI,CAAC;IACtF,CAAC;IAES,iCAAc,GAAxB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;QAC9B,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC;IAC9B,CAAC;IAQD,sBAAW,kCAAY;aAAvB;YACE,MAAM,CAAC,IAAI,CAAC,aAAa;QAC3B,CAAC;;;OAAA;IAED,sBAAW,6BAAO;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ;QACtB,CAAC;aACD,UAAmB,UAAuC;YACxD,IAAI,CAAC,QAAQ,GAAG,UAAU;YAC1B,IAAI,CAAC,cAAc,EAAE;QACvB,CAAC;;;OAJA;IAMM,2BAAQ,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,eAAe;IAC7B,CAAC;IACM,yBAAM,GAAb;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe;IAC9B,CAAC;IACH,eAAC;AAAD,CAAC;;AAED;IAA4D,8BAAoC;IAC9F,oBAAY,OAAsB,EAAE,MAAmD;QAAvF,YACE,kBAAM,MAAM,CAAC,SAGd;QAIO,cAAQ,GAA2C,EAAE;QAN3D,KAAI,CAAC,eAAe,GAAG,IAAI;QAC3B,KAAI,CAAC,OAAO,GAAG,OAAO;;IACxB,CAAC;IAMM,gCAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;IAC9B,CAAC;IAEM,wCAAmB,GAA1B;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;IAChC,CAAC;IAEM,8BAAS,GAAhB,UAAiB,OAAsB;QACrC,IAAM,KAAK,GAAG,IAAI,UAAU,CAA6B,OAAO,EAAE,IAAI,CAAC;QACvE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE;QACrB,MAAM,CAAC,KAAK;IACd,CAAC;IAEM,4BAAO,GAAd,UAAe,OAAoB;QACjC,IAAM,KAAK,GAAG,IAAI,QAAQ,CAA6B,OAAO,EAAE,IAAI,CAAC;QACrE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE;QACrB,MAAM,CAAC,KAAK;IACd,CAAC;IAEM,gCAAW,GAAlB,UAAmB,IAA0C;QAC3D,oEAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE;IACvB,CAAC;IACH,iBAAC;AAAD,CAAC,CArC2D,QAAQ,GAqCnE;;AAED;IAA0D,4BAAoC;IAC5F,kBAAY,OAAoB,EAAE,MAAmD;QAArF,YACE,kBAAM,MAAM,CAAC,SAEd;QADC,KAAI,CAAC,OAAO,GAAG,OAAO;;IACxB,CAAC;IAGH,eAAC;AAAD,CAAC,CAPyD,QAAQ,GAOjE;;AAEK,wBAAqD,OAAsB;IAC/E,MAAM,CAAC,IAAI,UAAU,CAA6B,OAAO,EAAE,IAAI,CAAC;AAClE,CAAC;AAEK,oBAAiD,IAA0C,EAAE,IAA0C;IAC3I,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;QACjB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC;IAC/C,CAAC;IAED,IAAI,MAAM,GAAG,IAAI;IAEjB,4EAAY,CAAC,IAAI,EAAE,wBAAc;QAC/B,EAAE,CAAC,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,sEAAQ,CAAC,cAAc,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9E,MAAM,GAAG,cAAc;QACzB,CAAC;IACH,CAAC,CAAC;IAEF,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC;IAC1D,CAAC;IAED,MAAM,CAAC,MAAM;AACf,CAAC;AAOK,uBACJ,IAA0C,EAC1C,uBAA2D,EAC3D,qBAAuD;IAEvD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,EAAE,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AACjG,CAAC;AAED,4BACE,IAA0C,EAC1C,uBAA2D,EAC3D,qBAAuD,EACvD,SAA2B;IAA3B,wCAAY,EAAe;IAE3B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,CAAC,OAAO,GAAG,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC;QACzD,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,eAAK,IAAI,yBAAkB,CAAC,KAAK,EAAE,uBAAuB,EAAE,qBAAqB,CAAC,EAAzE,CAAyE,CAAC;IACjI,CAAC;IACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAClB,SAAS,CAAC,OAAO,GAAG,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC;IACzD,CAAC;IACD,MAAM,CAAC,SAAS;AAClB,CAAC;AAEK,yBACJ,UAAkB,EAClB,yBAA6D,EAC7D,uBAAyD;IAEzD,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAc;IAErD,IAAI,CAAC;QACH,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,yBAAyB,EAAE,uBAAuB,EAAE,SAAS,CAAC;IAClG,CAAC;IAAC,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC;QACV,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC;IACpD,CAAC;AACH,CAAC;AAED,8BACE,IAAmD,EACnD,yBAA6D,EAC7D,uBAAyD,EACzD,SAAoB;IAEpB,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;QACjB,IAAI,GAAG,cAAc,CAA6B,yBAAyB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC/F,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvB,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAK,IAAI,2BAAoB,CAAC,IAAI,EAAE,yBAAyB,EAAE,uBAAuB,EAAE,KAAK,CAAC,EAArF,CAAqF,CAAC;QAC5H,CAAC;IACH,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9B,IAAM,QAAM,GAAG,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC3E,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAK,IAAI,2BAAoB,CAAC,QAAM,EAAE,yBAAyB,EAAE,uBAAuB,EAAE,KAAK,CAAC,EAAvF,CAAuF,CAAC;IAC9H,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC1D,CAAC;IACD,MAAM,CAAC,IAAI;AACb,CAAC;;;;;;;;;;AC/KK,qBAA+B,KAAqB;IACxD,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;QAClB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC;IACrD,CAAC;IACD,MAAM,CAAC,KAAK;AACd,CAAC;;;;;;;;;;ACLK,uBAAgD,OAAgB;IACpE,MAAM,CAAC,MAAM;SACV,IAAI,CAAC,OAAO,CAAC;SACb,GAAG,CAAC,UAAC,GAAkB,IAAK,QAAC;QAC5B,GAAG;QACH,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC;KACpB,CAAC,EAH2B,CAG3B,CAAC;AACP,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACPuC;AAiBxC;IAAA;QACY,cAAS,GAAG,EAAyB;IASjD,CAAC;IAPQ,2BAAS,GAAhB,UAAiB,QAA2B;QAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAEM,6BAAW,GAAlB,UAAmB,QAA2B;QAC5C,oEAAM,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC;IAClC,CAAC;IACH,cAAC;AAAD,CAAC;;AAED;IAA+C,oCAAgB;IAC7D,0BAAY,YAAqB;QAAjC,YACE,iBAAO,SAER;QADC,KAAI,CAAC,KAAK,GAAG,YAAY;;IAC3B,CAAC;IAIM,8BAAG,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,KAAK;IACnB,CAAC;IACH,uBAAC;AAAD,CAAC,CAX8C,OAAO,GAWrD;;AAED;IAA8C,mCAAyB;IAAvE;;IAQA,CAAC;IAPQ,6BAAG,GAAV,UAAW,QAAiB;QAC1B,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK;QAE3B,IAAI,CAAC,KAAK,GAAG,QAAQ;QAErB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAQ,IAAI,eAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAA5B,CAA4B,CAAC;IAClE,CAAC;IACH,sBAAC;AAAD,CAAC,CAR6C,gBAAgB,GAQ7D;;;;;;;;;;;ACvCK,sBAAmD,IAA0C,EAAE,WAAoD;IACvJ,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAEjC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACpB,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;AACH,CAAC;AAED,kBAA8C,IAA4C,EAAE,WAAoD,EAAE,IAAc;IAC9J,IAAI;SACD,WAAW,EAAE;SACb,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK,EAAE,KAAK;QAC3B,IAAM,OAAO,GAAO,IAAI,SAAE,KAAK,EAAC;QAEhC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC;QAEzC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACrB,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,OAAO,CAAC;QACvC,CAAC;IACH,CAAC,CAAC;AACN,CAAC;;;;;;;;;;;;AC/B8C;AA8BzC,kBAAkD,KAAc,EAAE,MAAuD;IAC7H,EAAE,CAAC,CAAE,MAAM,CAAC,KAAa,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI;IACb,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC;YACvC,MAAM,CAAE,MAAM,CAAC,KAAa,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,MAAM,CAAC,KAAK;QACrB,CAAC;IACH,CAAC;AACH,CAAC;AAuBK,wBAAkC,OAAgC,EAAE,gBAAiD;IACzH,IAAM,MAAM,GAAG,4EAAa,CAAC,gBAAgB,CAAC;SAC3C,MAAM,CACL,UAAC,MAAM,EAAE,EAAsB;YAApB,YAAG,EAAE,iBAAa;QAC3B,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC;QAE1B,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YACnB,IAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAa,CAAC;YACjD,EAAE,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC;oBACL,KAAK,EAAE,KAAK;oBACZ,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;wBAC3B,KAAK,EAAE,GAAG;wBACV,OAAO,EAAE,UAAU;qBACpB,CAAC;iBACH;YACH,CAAC;QACH,CAAC;QAED,MAAM,CAAC,MAAM;IACf,CAAC,EACD;QACE,KAAK,EAAE,IAAY;QACnB,MAAM,EAAE,EAA2C;KACpD,CACF;IAEH,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACjB,MAAM,CAAC;YACL,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,OAAO,EAAE,OAAkB;SAC5B;IACH,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC;YACL,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM,CAAC,MAAM;SACtB;IACH,CAAC;AACH,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser'\r\nimport { NgModule } from '@angular/core'\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\nimport { AppComponent } from './app/app.component'\r\nimport { TreeViewComponent } from './tree-view/tree-view.component'\r\nimport { FeaturesStorageService } from './features-storage.service'\r\nimport { OrderFormComponent } from './order-form/order-form.component'\r\nimport { ShopClientService } from './shop-client.service'\r\nimport { EditableTreeViewComponent } from './editable-tree-view/editable-tree-view.component'\r\nimport { FeatureTreeEditorFormComponent } from './feature-tree-editor-form/feature-tree-editor-form.component'\r\nimport { FormEditorService } from './feature-tree-editor-service'\r\nimport { InlineFeatureEditorComponent } from './editable-tree-view/inline-feature-editor/inline-feature-editor.component'\r\nimport { NumericInputComponent } from './form-elements/numeric-input/numeric-input.component'\r\nimport { InlineFeatureSetEditorComponent } from './editable-tree-view/inline-feature-set-editor/inline-feature-set-editor.component'\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TreeViewComponent,\r\n    OrderFormComponent,\r\n    EditableTreeViewComponent,\r\n    FeatureTreeEditorFormComponent,\r\n    InlineFeatureEditorComponent,\r\n    InlineFeatureSetEditorComponent,\r\n    NumericInputComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    FeaturesStorageService,\r\n    ShopClientService,\r\n    FormEditorService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"h1, h2, h3 {\\r\\n  font-weight: normal;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n:host {\\r\\n  font-family: sans-serif;\\r\\n  display: block;\\r\\n  position: relative;\\r\\n  max-width: 50em;\\r\\n  margin: 3em auto;\\r\\n  padding: 1em;\\r\\n  background: white;\\r\\n  -webkit-box-shadow: 2px 2px 14px -2px rgba(0, 0, 0, 0.47);\\r\\n          box-shadow: 2px 2px 14px -2px rgba(0, 0, 0, 0.47);\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  margin-bottom: 0.6em\\r\\n}\\r\\n\\r\\n.edit-mode-switch {\\r\\n  position: absolute;\\r\\n  left: calc(100% + 1em);\\r\\n  top: 0;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app/app.component.css\n// module id = ./src/app/app/app.component.css\n// module chunks = main","module.exports = \"<app-order-form\\r\\n  *ngIf=\\\"mode === 'order'\\\"\\r\\n  [features]=features\\r\\n  [orderFormStore]=orderFormStore\\r\\n  >\\r\\n</app-order-form>\\r\\n\\r\\n<app-feature-tree-editor-form\\r\\n  *ngIf=\\\"mode === 'edit'\\\"\\r\\n  [features]=features\\r\\n  [editorService]=editorService\\r\\n  >\\r\\n</app-feature-tree-editor-form>\\r\\n\\r\\n<button\\r\\n  *ngIf=\\\"mode === 'order'\\\"\\r\\n  class=edit-mode-switch\\r\\n  (click)=editForm()\\r\\n  >\\r\\n  Edit form\\r\\n</button>\\r\\n\\r\\n<button\\r\\n  *ngIf=\\\"mode === 'edit'\\\"\\r\\n  class=edit-mode-switch\\r\\n  (click)=previewForm()\\r\\n  >\\r\\n  Preview form\\r\\n</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app/app.component.html\n// module id = ./src/app/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core'\r\nimport { TreeBranch, createTreeRoot } from '../../utils/containers/tree'\r\nimport { Feature, FeatureSet } from '../../entities/feature'\r\nimport { FeaturesStorageService } from '../features-storage.service'\r\nimport { FeaturesOrderStorage } from '../features-order-storage'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { FormEditorService } from '../feature-tree-editor-service/';\r\n\r\ninterface AppState {\r\n  features: 1\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor(\r\n    private featuresStorage: FeaturesStorageService,\r\n    private client: HttpClient\r\n  ) {\r\n    this.features = this.featuresStorage.getAvailableFeatures()\r\n    this.orderFormStore = new FeaturesOrderStorage()\r\n  }\r\n\r\n  public mode: 'edit' | 'order' = 'edit'\r\n\r\n  public features: TreeBranch<FeatureSet, Feature>\r\n\r\n  public orderFormStore: FeaturesOrderStorage\r\n\r\n  public editorService: FormEditorService | null = null\r\n\r\n  public editForm() {\r\n    this.mode = 'edit'\r\n    this.editorService = new FormEditorService(this.featuresStorage)\r\n  }\r\n\r\n  public previewForm() {\r\n    this.mode = 'order'\r\n    this.orderFormStore = new FeaturesOrderStorage()\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app/app.component.ts","module.exports = \":host {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n:host, .new-item-editor {\\r\\n  padding-left: 1em;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  -webkit-user-select: none;\\r\\n     -moz-user-select: none;\\r\\n      -ms-user-select: none;\\r\\n          user-select: none;\\r\\n}\\r\\n\\r\\n:host(.root) {\\r\\n  padding: 0\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin: 0.15em 0;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editable-tree-view/editable-tree-view.component.css\n// module id = ./src/app/editable-tree-view/editable-tree-view.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"rootNodeFlow != null\\\">\\n  <span>{{rootNodeFlow?.name}}</span>\\n  <button (click)=editorService.initiateNewFeatureCreation(tree)>Add feature</button>\\n  <button (click)=editorService.initiateNewFeatureSetCreation(tree)>Add feature set</button>\\n</div>\\n<div *ngIf=\\\"rootNodeFlow == null\\\">\\n  <app-inline-feature-editor\\n    *ngIf=\\\"editFeatureFlow != null\\\"\\n    [editorState]=\\\"editFeatureFlow?.editorState\\\"\\n    (submit)=\\\"editorService.saveChanges()\\\"\\n    (cancel)=\\\"editorService.cancelEditing()\\\"\\n    >\\n  </app-inline-feature-editor>\\n  <app-inline-feature-set-editor\\n    *ngIf=\\\"editFeatureSetFlow != null\\\"\\n    [editorState]=\\\"editFeatureSetFlow?.editorState\\\"\\n    (submit)=\\\"editorService.saveChanges()\\\"\\n    (cancel)=\\\"editorService.cancelEditing()\\\"\\n    >\\n  </app-inline-feature-set-editor>\\n  <span *ngIf=\\\"featurePreviewFlow\\\">\\n    <span (click)=edit()>{{featurePreviewFlow?.name}}</span>\\n    <span (click)=edit()>${{featurePreviewFlow?.price}}</span>\\n    <button (click)=delete()>X</button>\\n  </span>\\n  <span *ngIf=\\\"featureSetPreviewFlow\\\">\\n    <span (click)=edit()>{{featureSetPreviewFlow?.name}}</span>\\n    <button (click)=delete()>X</button>\\n    <button (click)=editorService.initiateNewFeatureCreation(tree)>Add feature</button>\\n    <button (click)=editorService.initiateNewFeatureSetCreation(tree)>Add feature set</button>\\n  </span>\\n</div>\\n<app-editable-tree-view\\n  *ngFor=\\\"let option of children\\\"\\n  [tree]=option\\n  [disabled]=disabled\\n  [depth]=\\\"depth + 1\\\"\\n  >\\n</app-editable-tree-view>\\n<app-inline-feature-editor\\n  class=\\\"new-item-editor\\\"\\n  *ngIf=\\\"childFeatureIsBeingCreatedFlow != null\\\"\\n  [editorState]=\\\"childFeatureIsBeingCreatedFlow?.editorState\\\"\\n  (submit)=\\\"editorService.saveChanges()\\\"\\n  (cancel)=\\\"editorService.cancelEditing()\\\"\\n  >\\n</app-inline-feature-editor>\\n<app-inline-feature-set-editor\\n  class=\\\"new-item-editor\\\"\\n  *ngIf=\\\"childFeatureSetIsBeingCreatedFlow != null\\\"\\n  [editorState]=\\\"childFeatureSetIsBeingCreatedFlow?.editorState\\\"\\n  (submit)=\\\"editorService.saveChanges()\\\"\\n  (cancel)=\\\"editorService.cancelEditing()\\\"\\n  >\\n</app-inline-feature-set-editor>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editable-tree-view/editable-tree-view.component.html\n// module id = ./src/app/editable-tree-view/editable-tree-view.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core'\r\nimport { FeaturesOrderStorage } from '../features-order-storage'\r\nimport { Feature, FeatureSet } from '../../entities/feature'\r\nimport { TreeNode, TreeBranch, TreeLeaf } from '../../utils/containers/tree'\r\nimport { FormEditorService, FormState, FeatureEditorState, FeatureSetEditorState } from '../feature-tree-editor-service'\r\nimport { throwOnNull } from '../../utils/misc-utils';\r\n\r\ntype FeatureNode = TreeNode<FeatureSet, Feature>\r\n\r\n@Component({\r\n  selector: 'app-editable-tree-view',\r\n  templateUrl: './editable-tree-view.component.html',\r\n  styleUrls: ['./editable-tree-view.component.css']\r\n})\r\nexport class EditableTreeViewComponent {\r\n  constructor(\r\n    public editorService: FormEditorService\r\n  ) {\r\n    editorService.formState.subscribe(() => this.updateState())\r\n    this.updateState()\r\n  }\r\n\r\n  private updateState() {\r\n    const state = this.editorService.formState.get()\r\n\r\n    this.rootNodeFlow = (\r\n      this.tree != null &&\r\n      this.depth === 0 &&\r\n      this.tree.isBranch()\r\n    )\r\n      ? this.tree.content\r\n      : null\r\n\r\n    this.editFeatureFlow =\r\n      (\r\n        state.type === 'edit-feature' &&\r\n        state.editorState.node === this.tree\r\n      )\r\n        ? { editorState: state.editorState }\r\n        : null\r\n\r\n    this.editFeatureSetFlow =\r\n      (\r\n        state.type === 'edit-feature-set' &&\r\n        state.editorState.node === this.tree\r\n      )\r\n        ? { editorState: state.editorState }\r\n        : null\r\n\r\n    if (!this.editFeatureFlow && !this.editFeatureSetFlow) {\r\n      this.featurePreviewFlow =\r\n        (\r\n          this.tree &&\r\n          this.tree.isLeaf()\r\n        )\r\n          ? this.tree.content\r\n          : null\r\n          \r\n      this.featureSetPreviewFlow =\r\n        (\r\n          this.tree &&\r\n          this.tree.isBranch()\r\n        )\r\n          ? this.tree.content\r\n          : null\r\n    } else {\r\n      this.featurePreviewFlow = null\r\n      this.featureSetPreviewFlow = null\r\n    }\r\n\r\n    if (\r\n      state.type === 'edit-feature' &&\r\n      state.newItemParameters != null &&\r\n      state.newItemParameters.parent === this.tree\r\n    ) {\r\n      this.childFeatureIsBeingCreatedFlow = {\r\n        editorState: state.editorState\r\n      }\r\n    } else {\r\n      this.childFeatureIsBeingCreatedFlow = null\r\n    }\r\n\r\n    if (\r\n      state.type === 'edit-feature-set' &&\r\n      state.newItemParameters != null &&\r\n      state.newItemParameters.parent === this.tree\r\n    ) {\r\n      this.childFeatureSetIsBeingCreatedFlow = {\r\n        editorState: state.editorState\r\n      }\r\n    } else {\r\n      this.childFeatureSetIsBeingCreatedFlow = null\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  public depth: number = 0\r\n\r\n  @Input()\r\n  public disabled: boolean = false\r\n\r\n  public tree: FeatureNode | null = null\r\n\r\n  @Input('tree')\r\n  public set _tree(node: FeatureNode) {\r\n    this.tree = node\r\n    this.updateState()\r\n  }\r\n\r\n  public get children() {\r\n    const tree = throwOnNull(this.tree)\r\n    if (tree.isBranch()) {\r\n      return tree.getChildren()\r\n    } else {\r\n      return []\r\n    }\r\n  }\r\n\r\n  public rootNodeFlow:\r\n    {\r\n      name: string\r\n    } | null\r\n    = null\r\n\r\n  public editFeatureFlow:\r\n    {\r\n      editorState: FeatureEditorState\r\n    } | null\r\n    = null\r\n\r\n  public editFeatureSetFlow:\r\n    {\r\n      editorState: FeatureSetEditorState\r\n    } | null\r\n    = null\r\n\r\n  public featurePreviewFlow:\r\n    {\r\n      name: string,\r\n      price: number\r\n    } | null\r\n    = null\r\n  \r\n  public featureSetPreviewFlow:\r\n    {\r\n      name: string\r\n    } | null\r\n    = null\r\n\r\n  public childFeatureIsBeingCreatedFlow:\r\n    {\r\n      editorState: FeatureEditorState\r\n    } | null\r\n    = null\r\n\r\n  public childFeatureSetIsBeingCreatedFlow:\r\n    {\r\n      editorState: FeatureSetEditorState\r\n    } | null\r\n    = null\r\n\r\n  public edit() {\r\n    const tree = throwOnNull(this.tree)\r\n\r\n    if (tree.isBranch()) {\r\n      this.editorService.initiateFeatureSetEditing(tree)\r\n    } else if (tree.isLeaf()) {\r\n      this.editorService.initiateFeatureEditing(tree)      \r\n    }\r\n  }\r\n\r\n  public delete() {\r\n    this.editorService.delete(this.tree as any)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/editable-tree-view/editable-tree-view.component.ts","module.exports = \"form {\\r\\n  display: -webkit-inline-box;\\r\\n  display: -ms-inline-flexbox;\\r\\n  display: inline-flex;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n      -ms-flex-flow: column;\\r\\n          flex-flow: column;\\r\\n  -webkit-box-align: end;\\r\\n      -ms-flex-align: end;\\r\\n          align-items: flex-end;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editable-tree-view/inline-feature-editor/inline-feature-editor.component.css\n// module id = ./src/app/editable-tree-view/inline-feature-editor/inline-feature-editor.component.css\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FeatureEditorState } from '../../feature-tree-editor-service';\r\nimport { throwOnNull } from '../../../utils/misc-utils';\r\n\r\n@Component({\r\n  selector: 'app-inline-feature-editor',\r\n  template: `\r\n    <form\r\n      (submit)=\"\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n        handleSubmit()\r\n      \">\r\n      <input\r\n        [value]=\"state.name\"\r\n        (change)=\"state.name = $event.target.value\"\r\n        placeholder=\"Name\"\r\n        />\r\n      <app-numeric-input\r\n        [value]=\"state.price\"\r\n        (valueInput)=\"state.price = $event\"\r\n        placeholder=\"Price\"\r\n        >\r\n      </app-numeric-input>\r\n      <div>\r\n        <input\r\n          type=\"button\"\r\n          value=\"Cancel\"\r\n          (click)=\"cancel.next(editorState)\"\r\n          />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Save\"\r\n          />\r\n      </div>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./inline-feature-editor.component.css']\r\n})\r\nexport class InlineFeatureEditorComponent {\r\n  constructor() { }\r\n\r\n  @Input()\r\n  public editorState: FeatureEditorState | null = null\r\n\r\n  @Output()\r\n  public submit = new EventEmitter<FeatureEditorState>()\r\n\r\n  @Output()\r\n  public cancel = new EventEmitter<FeatureEditorState>()\r\n\r\n  public handleSubmit() {\r\n    const validationResults = this.state.getValidityState()\r\n    if (validationResults.valid) {\r\n      this.submit.next(this.state)\r\n    }\r\n  }\r\n\r\n  public get state() {\r\n    return throwOnNull(this.editorState)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/editable-tree-view/inline-feature-editor/inline-feature-editor.component.ts","module.exports = \"form {\\r\\n  display: -webkit-inline-box;\\r\\n  display: -ms-inline-flexbox;\\r\\n  display: inline-flex;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n      -ms-flex-flow: column;\\r\\n          flex-flow: column;\\r\\n  -webkit-box-align: end;\\r\\n      -ms-flex-align: end;\\r\\n          align-items: flex-end;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editable-tree-view/inline-feature-set-editor/inline-feature-set-editor.component.css\n// module id = ./src/app/editable-tree-view/inline-feature-set-editor/inline-feature-set-editor.component.css\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FeatureSetEditorState } from '../../feature-tree-editor-service';\r\nimport { throwOnNull } from '../../../utils/misc-utils';\r\n\r\n@Component({\r\n  selector: 'app-inline-feature-set-editor',\r\n  template: `\r\n    <form\r\n      (submit)=\"\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n        handleSubmit()\r\n      \">\r\n      <input\r\n        [value]=\"state.name\"\r\n        (change)=\"state.name = $event.target.value\"\r\n        placeholder=\"Name\"\r\n        />\r\n      <div>\r\n        <input\r\n          type=\"button\"\r\n          value=\"Cancel\"\r\n          (click)=\"cancel.next(editorState)\"\r\n          />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Save\"\r\n          />\r\n      </div>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./inline-feature-set-editor.component.css']\r\n})\r\nexport class InlineFeatureSetEditorComponent {\r\n  constructor() { }\r\n\r\n  @Input()\r\n  public editorState: FeatureSetEditorState | null = null\r\n\r\n  @Output()\r\n  public submit = new EventEmitter<FeatureSetEditorState>()\r\n\r\n  @Output()\r\n  public cancel = new EventEmitter<FeatureSetEditorState>()\r\n\r\n  public handleSubmit() {\r\n    const validationResults = this.state.getValidityState()\r\n    if (validationResults.valid) {\r\n      this.submit.next(this.state)\r\n    }\r\n  }\r\n\r\n  public get state() {\r\n    return throwOnNull(this.editorState)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/editable-tree-view/inline-feature-set-editor/inline-feature-set-editor.component.ts","import { Component, OnInit, Input } from '@angular/core'\r\nimport { FormEditorService } from '../feature-tree-editor-service'\r\nimport { TreeNode } from '../../utils/containers/tree'\r\nimport { FeatureSet, Feature } from '../../entities/feature'\r\n\r\n@Component({\r\n  selector: 'app-feature-tree-editor-form',\r\n  template: `\r\n    <h2>Feature set editor</h2>\r\n    <app-editable-tree-view\r\n      [tree]=features\r\n      >\r\n    </app-editable-tree-view>\r\n  `\r\n})\r\nexport class FeatureTreeEditorFormComponent {\r\n  constructor() { }\r\n\r\n  @Input()\r\n  public editorService: FormEditorService\r\n\r\n  @Input()\r\n  public features: TreeNode<FeatureSet, Feature>\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/feature-tree-editor-form/feature-tree-editor-form.component.ts","import { Injectable, Inject } from '@angular/core'\r\nimport { FeaturesStorageService } from '../features-storage.service'\r\nimport { Feature, FeatureSet } from '../../entities/feature'\r\nimport { TreeBranch, TreeLeaf, findParent } from '../../utils/containers/tree'\r\nimport { validateObject, ObjectValidationResult } from '../../utils/validation'\r\nimport { Observable } from 'rxjs/Observable'\r\nimport { Subject } from 'rxjs/Subject'\r\nimport { ObservableValue } from '../../utils/observable-value'\r\n\r\ntype FeatureNode = TreeLeaf<FeatureSet, Feature>\r\ntype FeatureSetNode = TreeBranch<FeatureSet, Feature>\r\ntype FeatureTreeNode = FeatureNode | FeatureSetNode\r\n\r\nexport type FormState = (\r\n  {\r\n    type: 'view'\r\n  } |\r\n  {\r\n    type: 'edit-feature'\r\n    newItemParameters?: {\r\n      parent: FeatureSetNode\r\n    }\r\n    editorState: FeatureEditorState\r\n  } |\r\n  {\r\n    type: 'edit-feature-set',\r\n    newItemParameters?: {\r\n      parent: FeatureSetNode\r\n    }\r\n    editorState: FeatureSetEditorState\r\n  }\r\n)\r\n\r\nexport class FormEditorService {\r\n  constructor(\r\n    @Inject(FeaturesStorageService)\r\n    private store: FeaturesStorageService\r\n  ) {\r\n\r\n  }\r\n\r\n  public formState = new ObservableValue<FormState>({ type: 'view' })\r\n  private get state() {\r\n    return this.formState.get()\r\n  }\r\n  private set state(state: FormState) {\r\n    this.formState.set(state)\r\n  }\r\n\r\n  public initiateFeatureEditing(featureNode: FeatureNode) {\r\n    if (this.state.type === 'view') {\r\n      this.state = {\r\n        type: 'edit-feature',\r\n        editorState: new FeatureEditorState(featureNode, null)\r\n      }\r\n    } else {\r\n      throw new Error(`You can only switch to 'edit-feature' state from 'view' state`)\r\n    }\r\n  }\r\n\r\n  public initiateFeatureSetEditing(featureSetNode: TreeBranch<FeatureSet, Feature>) {\r\n    if (this.state.type === 'view') {\r\n      this.state = {\r\n        type: 'edit-feature-set',\r\n        editorState: new FeatureSetEditorState(featureSetNode, null)\r\n      }\r\n    } else {\r\n      throw new Error(`You can only switch to 'edit-feature-set' state from 'view' state`)\r\n    }\r\n  }\r\n\r\n  public initiateNewFeatureCreation(parent: FeatureSetNode) {\r\n    if (this.state.type === 'view') {\r\n      this.state = {\r\n        type: 'edit-feature',\r\n        newItemParameters: {\r\n          parent\r\n        },\r\n        editorState: new FeatureEditorState(null, parent)\r\n      }\r\n    } else {\r\n      throw new Error(`You can only switch to 'edit-feature' state from 'view' state`)\r\n    }\r\n  }\r\n\r\n  public initiateNewFeatureSetCreation(parent: FeatureSetNode) {\r\n    if (this.state.type === 'view') {\r\n      this.state = {\r\n        type: 'edit-feature-set',\r\n        newItemParameters: {\r\n          parent\r\n        },\r\n        editorState: new FeatureSetEditorState(null, parent)\r\n      }\r\n    } else {\r\n      throw new Error(`You can only switch to 'edit-feature-set' state from 'view' state`)\r\n    }\r\n  }\r\n\r\n  public delete(node: FeatureTreeNode) {\r\n    if (\r\n      this.state.type === 'view'\r\n    ) {\r\n      const parent = findParent(this.store.getAvailableFeatures(), node)\r\n      parent.removeChild(node)\r\n    } else {\r\n      throw new Error(`Can't call delete action when not in 'view' state`)\r\n    }\r\n  }\r\n\r\n  public cancelEditing() {\r\n    if (\r\n      this.state.type === 'edit-feature' ||\r\n      this.state.type === 'edit-feature-set'\r\n    ) {\r\n      this.state = {\r\n        type: 'view'\r\n      }\r\n    } else {\r\n      throw new Error(`Can't call cancelEditing action when not in 'edit-feature' or 'edit-feature-set' states`)\r\n    }\r\n  }\r\n\r\n  public saveChanges() {\r\n    if (\r\n      this.state.type === 'edit-feature' ||\r\n      this.state.type === 'edit-feature-set'\r\n    ) {\r\n      this.state.editorState.save()\r\n      this.state = {\r\n        type: 'view'\r\n      }\r\n    } else {\r\n      throw new Error(`Can't call saveChanges action when not in 'edit-feature' or 'edit-feature-set' states`)\r\n    }\r\n  }\r\n}\r\n\r\nconst nameValidatorConfig = {\r\n  check: (name: string) => name.length > 0 && name.length <= 100,\r\n  error: 'Name should not be empty nor be longer than 100 character'\r\n}\r\n\r\nexport class FeatureEditorState {\r\n  constructor(public node: FeatureNode | null, private parent: FeatureSetNode | null) {\r\n    this.name = node ? node.content.name : ''\r\n    this.price = node ? node.content.price : null\r\n  }\r\n\r\n  public name: string\r\n\r\n  public price: number | null\r\n\r\n  public getValidityState() {\r\n    return validateObject<Feature>(\r\n      {\r\n        name: this.name,\r\n        price: this.price\r\n      },\r\n      {\r\n        name: nameValidatorConfig,\r\n        price: {\r\n          check: (p: number) => p > 0,\r\n          error: 'Price should be higher than 0'\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  public getFeature(): Feature {\r\n    const validationResult = this.getValidityState() \r\n    if (validationResult.valid) {\r\n      return validationResult.subject\r\n    } else {\r\n      throw new Error(`Can't create feature from provided input`)\r\n    }\r\n  }\r\n\r\n  public save() {\r\n    if (this.noInputDone()) {\r\n      return\r\n    } else {\r\n      if (this.node != null) {\r\n        this.node.content = this.getFeature()\r\n      } else if (this.parent != null) {\r\n        this.parent.addLeaf(this.getFeature())\r\n      }\r\n    }\r\n  }\r\n\r\n  public noInputDone() {\r\n    return this.name === '' && this.price == null\r\n  }\r\n}\r\n\r\nexport class FeatureSetEditorState {\r\n  constructor(public node: FeatureSetNode | null, private parent: FeatureSetNode | null) {\r\n    this.name = node ? node.content.name : ''\r\n  }\r\n\r\n  public name: string\r\n\r\n  public getValidityState() {\r\n    return validateObject<FeatureSet>(\r\n      { name: this.name },\r\n      { name: nameValidatorConfig }\r\n    )\r\n  }\r\n\r\n  public getFeatureSet(): FeatureSet {\r\n    if (this.getValidityState().valid) {\r\n      return {\r\n        name: this.name\r\n      } as FeatureSet\r\n    } else {\r\n      throw new Error(`Can't create feature set from provided input`)\r\n    }\r\n  }\r\n\r\n  public noInputDone() {\r\n    return this.name === ''\r\n  }\r\n\r\n  public save() {\r\n    if (this.noInputDone()) {\r\n      return\r\n    } else {\r\n      if (this.node != null) {\r\n        this.node.content = this.getFeatureSet()\r\n      } else if (this.parent != null) {\r\n        this.parent.addBranch(this.getFeatureSet())\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/feature-tree-editor-service/index.ts","import { Feature, FeatureSet } from '../entities/feature'\r\nimport { traverseTree } from '../utils/traverse-tree'\r\nimport { TreeNode, TreeLeaf } from '../utils/containers/tree'\r\nimport { addIfMissing, remove, contains } from '../utils/array-utils'\r\n\r\nexport class FeaturesOrderStorage {\r\n  constructor() {\r\n\r\n  }\r\n\r\n  private selectedFeatures: TreeLeaf<FeatureSet, Feature>[] = []\r\n\r\n  public selectFeature(feature: TreeNode<FeatureSet, Feature>) {\r\n    traverseTree(feature, childFeature => {\r\n      if (childFeature.isLeaf()) {\r\n        addIfMissing(this.selectedFeatures, childFeature)\r\n      }\r\n    })\r\n  }\r\n\r\n  public deselectFeature(feature: TreeNode<FeatureSet, Feature>) {\r\n    traverseTree(feature, childFeature => {\r\n      if (childFeature.isLeaf()) {\r\n        remove(this.selectedFeatures, childFeature)\r\n      }\r\n    })\r\n  }\r\n\r\n  public getTotalPrice() {\r\n    return this.selectedFeatures.reduce((total, feature) => total + feature.content.price, 0)\r\n  }\r\n\r\n  public getFeatureSelectionState(feature: TreeNode<FeatureSet, Feature>) {\r\n    let allChildrenSelected = true\r\n    let someChildrenSelected = false\r\n\r\n    traverseTree(feature, childFeature => {\r\n      if (childFeature.isLeaf()) {\r\n        const childSelected = contains(this.selectedFeatures, childFeature)\r\n        allChildrenSelected = allChildrenSelected && childSelected\r\n        someChildrenSelected = someChildrenSelected || childSelected\r\n      }\r\n    })\r\n\r\n    if (allChildrenSelected) {\r\n      return 'selected'\r\n    } else if (someChildrenSelected) {\r\n      return 'partially-selected'\r\n    } else {\r\n      return 'not-selected'\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/features-order-storage.ts","import { Injectable } from '@angular/core'\r\nimport { Feature, FeatureSet } from '../entities/feature'\r\nimport { TreeBranch, serializeTree, deserializeTree } from '../utils/containers/tree'\r\n\r\nconst dummyFeatures = [\r\n  {\r\n    name: 'File system drivers',\r\n    features: [\r\n      {\r\n        name: 'NTFS',\r\n      },\r\n      {\r\n        name: 'Fat32',\r\n      },\r\n      {\r\n        name: 'ext4',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Multimedia features',\r\n    features: [\r\n      {\r\n        name: 'Audio drivers',\r\n      },\r\n      {\r\n        name: 'Video drivers',\r\n        features: [\r\n          {\r\n            name: 'NVIDIA 10x'\r\n          },\r\n          {\r\n            name: 'NVIDIA 9x'\r\n          },\r\n          {\r\n            name: 'AMD desktop graphics'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\n\r\n@Injectable()\r\nexport class FeaturesStorageService {\r\n  constructor() {\r\n    this.features = this.load()\r\n    this.features.stateUpdated.subscribe(state => localStorage.setItem(\r\n      'feature-set',\r\n      serializeTree(\r\n        this.features,\r\n        node => JSON.stringify(node),\r\n        node => JSON.stringify(node)\r\n      )\r\n    ))\r\n  }\r\n\r\n  private load(): TreeBranch<FeatureSet, Feature> {\r\n    const serialized = localStorage.getItem('feature-set')\r\n\r\n    if (!serialized) {\r\n      return createTreeFromFeatures(dummyFeatures)\r\n    } else {\r\n      return deserializeTree(serialized, node => JSON.parse(node), node => JSON.parse(node))\r\n    }\r\n  }\r\n\r\n  private features: TreeBranch<FeatureSet, Feature>\r\n\r\n  public getAvailableFeatures() {\r\n    return this.features\r\n  }\r\n}\r\n\r\nfunction createTreeFromFeatures(features: any[], tree?: TreeBranch<FeatureSet, Feature>) {\r\n  const branch = tree || new TreeBranch<FeatureSet, Feature>({ name: 'Additional OS features' }, null)\r\n  \r\n  features.forEach(feature => {\r\n    if (feature.features != null) {\r\n      const newBranch = branch.addBranch({\r\n        name: feature.name\r\n      })\r\n      createTreeFromFeatures(feature.features, newBranch)\r\n    } else {\r\n      branch.addLeaf({\r\n        name: feature.name,\r\n        price: getRandomPrice()\r\n      })\r\n    }\r\n  })\r\n\r\n  return branch\r\n}\r\n\r\nfunction getRandomPrice() {\r\n  return +(Math.random() * 10 + 5).toFixed(2)\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/features-storage.service.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-numeric-input',\n  template: `\n    <input\n      [value]=\"value\"\n      (change)=handleInput($event.target.value)\n      [placeholder]=placeholder\n      />\n  `,\n  styles: []\n})\nexport class NumericInputComponent {\n  constructor() { }\n\n  @Input()\n  public value: number | null = null\n\n  @Input()\n  public placeholder: string = \"\"\n\n  @Output()\n  public valueInput = new EventEmitter<number | null>()\n\n  @Output()\n  public validity = new EventEmitter<boolean>()\n\n  public handleInput(value: string) {\n    if (value === '') {\n      this.valueInput.next(null)\n      this.validity.next(true)\n    } else {\n      const parsed = parseFloat(value)\n      if (isNaN(parsed)) {\n        this.validity.next(false)\n      } else {\n        this.valueInput.next(parsed)\n        this.validity.next(true)\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/form-elements/numeric-input/numeric-input.component.ts","module.exports = \"form {\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.preview {\\r\\n  margin-left: 1em;\\r\\n}\\r\\n\\r\\n.total {\\r\\n  margin: 0.3em 0 0.5em;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/order-form/order-form.component.css\n// module id = ./src/app/order-form/order-form.component.css\n// module chunks = main","module.exports = \"<h2>We, programmers, love trees. So we've decided to make one for feature selection form!</h2>\\n<form (submit)=\\\"$event.preventDefault(); submit()\\\">\\n  <div>\\n    <app-tree-view\\n      class=root\\n      [tree]=features\\n      [orderFormStore]=orderFormStore\\n      [disabled]=disabled\\n      (featureSelected)=showPreview($event)\\n      >\\n    </app-tree-view>\\n    <div class=\\\"total\\\">\\n      <label>\\n        Total:\\n        <input\\n          type=\\\"text\\\"\\n          readonly\\n          [value]=\\\"orderFormStore.getTotalPrice().toFixed(2)\\\"\\n          />\\n      </label>\\n    </div>\\n    <input\\n      [disabled]=disabled\\n      type=\\\"submit\\\"\\n      value=\\\"Submit order\\\"\\n      />\\n  </div>\\n  <div class=\\\"preview\\\" *ngIf=\\\"preview\\\">\\n    {{preview}}\\n  </div>\\n</form>\\n<iframe\\n  *ngIf=\\\"responseURL\\\"\\n  [src]=\\\"responseURL\\\"\\n  frameborder=\\\"0\\\">\\n</iframe>\\n<div *ngIf=\\\"serverError\\\">Got problems communicating with server. Please, try again later or contact <a href=\\\"mailto:support@support.com\\\">our support</a></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/order-form/order-form.component.html\n// module id = ./src/app/order-form/order-form.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core'\r\nimport { FeaturesOrderStorage } from '../features-order-storage'\r\nimport { TreeBranch, TreeNode } from '../../utils/containers/tree'\r\nimport { FeatureSet, Feature } from '../../entities/feature'\r\nimport { ShopClientService } from '../shop-client.service'\r\n\r\n@Component({\r\n  selector: 'app-order-form',\r\n  templateUrl: './order-form.component.html',\r\n  styleUrls: ['./order-form.component.css']\r\n})\r\nexport class OrderFormComponent {\r\n  constructor(\r\n    private client: ShopClientService\r\n  ) { }\r\n\r\n  @Input()\r\n  public orderFormStore: FeaturesOrderStorage\r\n\r\n  @Input()\r\n  public features: TreeBranch<FeatureSet, Feature>\r\n\r\n  public responseURL: string | null\r\n\r\n  public serverError: boolean = false\r\n\r\n  public busy: boolean = false\r\n\r\n  public get disabled() {\r\n    return this.busy\r\n  }\r\n\r\n  public submit() {\r\n    this.serverError = false\r\n    this.busy = true\r\n\r\n    this\r\n      .client\r\n      .submitOrder(this.orderFormStore)\r\n      .then(result => this.responseURL = result.saleURL)\r\n      .catch(() => this.serverError = true)\r\n      .then(() => this.busy = false)\r\n  }\r\n\r\n  public preview: string | null = null\r\n\r\n  public showPreview(node: TreeNode<FeatureSet, Feature>) {\r\n    this.preview = `Preview of ${node.content.name}` \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/order-form/order-form.component.ts","import { Injectable } from '@angular/core'\nimport { FeaturesOrderStorage } from './features-order-storage'\nimport { HttpClient } from '@angular/common/http'\n\nexport interface OrderSubmissionResponse {\n  saleURL: string\n}\n\n@Injectable()\nexport class ShopClientService {\n  constructor(\n    private client: HttpClient\n  ) { }\n\n  public submitOrder(orderStore: FeaturesOrderStorage) {\n    return new Promise<OrderSubmissionResponse>(\n      (resolve, reject) => {\n        this\n          .client\n          .post(\n            'https://preprod.paymeservice.com/api/generate-sale',\n            {\n              seller_payme_id: 'MPL14985-68544Z1G- SPV5WK2K-0WJWHC7N',\n              sale_price: orderStore.getTotalPrice(),\n              currency: 'USD',\n              product_name: 'Payment for files',\n              installments: '1',\n              language: 'en'\n            }\n          )\n          .subscribe(\n            (result: any) => resolve({\n              saleURL: result.sale_url\n            }),\n            reject\n          )\n      }\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shop-client.service.ts","module.exports = \":host {\\r\\n  display: block;\\r\\n  padding-left: 1em;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  -webkit-user-select: none;\\r\\n     -moz-user-select: none;\\r\\n      -ms-user-select: none;\\r\\n          user-select: none;\\r\\n}\\r\\n\\r\\n:host(.root) {\\r\\n  padding: 0\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tree-view/tree-view.component.css\n// module id = ./src/app/tree-view/tree-view.component.css\n// module chunks = main","module.exports = \"<div>\\r\\n  <input\\r\\n    type=\\\"checkbox\\\"\\r\\n    (change)=\\\"featureSelect($event.target.checked)\\\"\\r\\n    [checked]=\\\"selected\\\"\\r\\n    [indeterminate]=\\\"partiallySelected\\\"\\r\\n    [disabled]=disabled\\r\\n    />\\r\\n  <span (click)=featureSelected.next(tree)>\\r\\n    {{label}}\\r\\n  </span>\\r\\n</div>\\r\\n<app-tree-view\\r\\n  *ngFor=\\\"let option of children\\\"\\r\\n  [tree]=option\\r\\n  [orderFormStore]=orderFormStore\\r\\n  [disabled]=disabled\\r\\n  (featureSelected)=featureSelected.next($event)\\r\\n  >\\r\\n</app-tree-view>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tree-view/tree-view.component.html\n// module id = ./src/app/tree-view/tree-view.component.html\n// module chunks = main","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core'\r\nimport { TreeNode, TreeBranch, TreeLeaf } from '../../utils/containers/tree'\r\nimport { Feature, FeatureSet } from '../../entities/feature'\r\nimport { traverseTree } from '../../utils/traverse-tree'\r\nimport { FeaturesOrderStorage } from '../features-order-storage'\r\n\r\ntype FeatureNode = TreeNode<FeatureSet, Feature>\r\n\r\n@Component({\r\n  selector: 'app-tree-view',\r\n  templateUrl: './tree-view.component.html',\r\n  styleUrls: ['./tree-view.component.css']\r\n})\r\nexport class TreeViewComponent {\r\n  constructor() { }\r\n\r\n  @Input()\r\n  public orderFormStore: FeaturesOrderStorage\r\n\r\n  @Input()\r\n  public depth: number = 0\r\n\r\n  @Input()\r\n  public disabled: boolean = false\r\n\r\n  @Input()\r\n  public tree: FeatureNode\r\n\r\n  @Output()\r\n  public featureSelected = new EventEmitter<FeatureNode>()\r\n\r\n  public get children() {\r\n    if (this.tree.isBranch()) {\r\n      return this.tree.getChildren()\r\n    } else {\r\n      return []\r\n    }\r\n  }\r\n\r\n  public get label() {\r\n    return (\r\n      this.tree.content.name +\r\n      (\r\n        this.tree.isBranch()\r\n          ? ':'\r\n          : ''\r\n      ) +\r\n      (\r\n        this.tree.isLeaf()\r\n          ? ' $' + this.tree.content.price.toFixed(2)\r\n          : ''\r\n      )\r\n    )\r\n  }\r\n\r\n  public get selected() {\r\n    return this.orderFormStore.getFeatureSelectionState(this.tree) === 'selected'\r\n  }\r\n\r\n  public get partiallySelected() {\r\n    return this.orderFormStore.getFeatureSelectionState(this.tree) === 'partially-selected'\r\n  }\r\n\r\n  public featureSelect(selected: boolean) {\r\n    if (selected) {\r\n      this.orderFormStore.selectFeature(this.tree)\r\n    } else {\r\n      this.orderFormStore.deselectFeature(this.tree)      \r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tree-view/tree-view.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core'\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\r\n\r\nimport { AppModule } from './app/app.module'\r\nimport { environment } from './environments/environment'\r\n\r\nif (environment.production) {\r\n  enableProdMode()\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.log(err))\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","export function contains<ItemType>(array: ItemType[], item: ItemType) {\r\n    return array.indexOf(item) !== -1\r\n}\r\n\r\nexport function addIfMissing<ItemType>(array: ItemType[], item: ItemType) {\r\n    if (!contains(array, item)) {\r\n        array.push(item)\r\n    }\r\n    return array\r\n}\r\n\r\nexport function lastItem<ItemType>(array: ItemType[]) {\r\n    if (array.length === 0) {\r\n        return null\r\n    } else {\r\n        return array[array.length - 1]\r\n    }\r\n}\r\n\r\nexport function remove<ItemType>(array: ItemType[], item: ItemType) {\r\n    if (!contains(array, item)) {\r\n        return array\r\n    } else {\r\n        const itemLocation = array.indexOf(item)\r\n        array.splice(itemLocation, 1)\r\n        return array\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/array-utils.ts","import { addIfMissing, contains, remove } from '../array-utils'\r\nimport { traverseTree } from '../traverse-tree';\r\nimport { ObservableOutput, ObservableValue, Emitter } from '../observable-value';\r\n\r\nexport class TreeNode<BranchContent, LeafContent> {\r\n  constructor (private parent: TreeNode<BranchContent, LeafContent> | null) {\r\n    this._stateUpdated = new ObservableValue<TreeNode<BranchContent, LeafContent>>(this)\r\n  }\r\n\r\n  protected dispatchUpdate() {\r\n    if (this.parent) {\r\n      this.parent.dispatchUpdate()\r\n    }\r\n    this._stateUpdated.set(this)\r\n  }\r\n\r\n  protected canHaveChildren: boolean\r\n\r\n  protected _content: BranchContent | LeafContent\r\n\r\n  private _stateUpdated: ObservableValue<TreeNode<BranchContent, LeafContent>>\r\n\r\n  public get stateUpdated(): Emitter<TreeNode<BranchContent, LeafContent>> {\r\n    return this._stateUpdated\r\n  }\r\n\r\n  public get content(): BranchContent | LeafContent {\r\n    return this._content\r\n  }\r\n  public set content(newContent: BranchContent | LeafContent) {\r\n    this._content = newContent\r\n    this.dispatchUpdate()\r\n  }\r\n\r\n  public isBranch(): this is TreeBranch<BranchContent, LeafContent> {\r\n    return this.canHaveChildren\r\n  }\r\n  public isLeaf(): this is TreeLeaf<BranchContent, LeafContent> {\r\n    return !this.canHaveChildren\r\n  }\r\n}\r\n\r\nexport class TreeBranch<BranchContent, LeafContent> extends TreeNode<BranchContent, LeafContent> {\r\n  constructor(content: BranchContent, parent: TreeNode<BranchContent, LeafContent> | null) {\r\n    super(parent)\r\n    this.canHaveChildren = true\r\n    this.content = content\r\n  }\r\n\r\n  public content: BranchContent\r\n\r\n  private children: TreeNode<BranchContent, LeafContent>[] = []\r\n\r\n  public getChildren() {\r\n    return this.children.slice()\r\n  }\r\n\r\n  public getChildrenIterator() {\r\n    return this.children.entries()\r\n  }\r\n\r\n  public addBranch(content: BranchContent): TreeBranch<BranchContent, LeafContent> {\r\n    const child = new TreeBranch<BranchContent, LeafContent>(content, this)\r\n    this.children.push(child)\r\n    this.dispatchUpdate()\r\n    return child\r\n  }\r\n\r\n  public addLeaf(content: LeafContent): TreeNode<BranchContent, LeafContent> {\r\n    const child = new TreeLeaf<BranchContent, LeafContent>(content, this)\r\n    this.children.push(child)\r\n    this.dispatchUpdate()\r\n    return child\r\n  }\r\n\r\n  public removeChild(node: TreeNode<BranchContent, LeafContent>) {\r\n    remove(this.children, node)\r\n    this.dispatchUpdate()\r\n  }\r\n}\r\n\r\nexport class TreeLeaf<BranchContent, LeafContent> extends TreeNode<BranchContent, LeafContent> {\r\n  constructor(content: LeafContent, parent: TreeNode<BranchContent, LeafContent> | null) {\r\n    super(parent)\r\n    this.content = content\r\n  }\r\n\r\n  public content: LeafContent\r\n}\r\n\r\nexport function createTreeRoot<BranchContent, LeafContent>(content: BranchContent) {\r\n  return new TreeBranch<BranchContent, LeafContent>(content, null)\r\n}\r\n\r\nexport function findParent<BranchContent, LeafContent>(root: TreeNode<BranchContent, LeafContent>, node: TreeNode<BranchContent, LeafContent>): TreeBranch<BranchContent, LeafContent> {\r\n  if (root == node) {\r\n    throw new Error(`Root node can't be a child`)\r\n  }\r\n\r\n  let result = null\r\n\r\n  traverseTree(root, possibleParent => {\r\n    if (possibleParent.isBranch() && contains(possibleParent.getChildren(), node)) {\r\n      result = possibleParent\r\n    }\r\n  })\r\n\r\n  if (result == null) {\r\n    throw new Error(`Node doesn't belong to specified tree`)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\ninterface PlainTree {\r\n  content: string,\r\n  children?: PlainTree[]\r\n}\r\n\r\nexport function serializeTree<BranchContent, LeafContent>(\r\n  root: TreeNode<BranchContent, LeafContent>,\r\n  branchContentSerializer: (content: BranchContent) => string,\r\n  leafContentSerializer: (content: LeafContent) => string\r\n) {\r\n  return JSON.stringify(convertToPlainTree(root, branchContentSerializer, leafContentSerializer))\r\n}\r\n\r\nfunction convertToPlainTree<BranchContent, LeafContent>(\r\n  root: TreeNode<BranchContent, LeafContent>,\r\n  branchContentSerializer: (content: BranchContent) => string,\r\n  leafContentSerializer: (content: LeafContent) => string,\r\n  plainTree = {} as PlainTree\r\n) {\r\n  if (root.isBranch()) {\r\n    plainTree.content = branchContentSerializer(root.content)\r\n    plainTree.children = root.getChildren().map(child => convertToPlainTree(child, branchContentSerializer, leafContentSerializer))\r\n  }\r\n  if (root.isLeaf()) {\r\n    plainTree.content = leafContentSerializer(root.content)\r\n  }\r\n  return plainTree\r\n}\r\n\r\nexport function deserializeTree<BranchContent, LeafContent>(\r\n  serialized: string,\r\n  branchContentDeserializer: (content: string) => BranchContent,\r\n  leafContentDeserializer: (content: string) => LeafContent\r\n) {\r\n  const plainTree = JSON.parse(serialized) as PlainTree\r\n\r\n  try {\r\n    return convertFromPlainTree(null, branchContentDeserializer, leafContentDeserializer, plainTree)\r\n  } catch(e) {\r\n    throw new Error('Unable to parse serialized tree')\r\n  }\r\n}\r\n\r\nfunction convertFromPlainTree<BranchContent, LeafContent>(\r\n  root: TreeBranch<BranchContent, LeafContent> | null,\r\n  branchContentDeserializer: (content: string) => BranchContent,\r\n  leafContentDeserializer: (content: string) => LeafContent,\r\n  plainTree: PlainTree\r\n) {\r\n  if (root == null) {\r\n    root = createTreeRoot<BranchContent, LeafContent>(branchContentDeserializer(plainTree.content))\r\n    if (plainTree.children) {\r\n      plainTree.children.forEach(child => convertFromPlainTree(root, branchContentDeserializer, leafContentDeserializer, child))\r\n    }\r\n  } else if (plainTree.children) {\r\n    const branch = root.addBranch(branchContentDeserializer(plainTree.content))\r\n    plainTree.children.forEach(child => convertFromPlainTree(branch, branchContentDeserializer, leafContentDeserializer, child))\r\n  } else {\r\n    root.addLeaf(leafContentDeserializer(plainTree.content))\r\n  }\r\n  return root\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/containers/tree.ts","export function throwOnNull<Subject>(value: Subject | null): Subject {\r\n  if (value == null) {\r\n    throw new Error(`Value can't be null or undefined`)\r\n  }\r\n  return value\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/misc-utils.ts","export function keyValuePairs<Subject extends Object>(subject: Subject) {\r\n  return Object\r\n    .keys(subject)\r\n    .map((key: keyof Subject) => ({\r\n      key,\r\n      value: subject[key]\r\n    }))\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/object-utils.ts","import { remove } from \"../array-utils\";\r\n\r\nexport type Observer<Subject> = (newValue: Subject, oldValue: Subject) => void\r\n\r\nexport interface Emitter<Subject> {\r\n  subscribe(observer: Observer<Subject>): void\r\n  unsubscribe(observer: Observer<Subject>): void\r\n}\r\n\r\nexport interface Input<Subject> {\r\n  set(value: Subject): void\r\n}\r\n\r\nexport interface Output<Subject> {\r\n  get(): Subject\r\n}\r\n\r\nexport abstract class Emitter<Subject> {\r\n  protected observers = [] as Observer<Subject>[]\r\n\r\n  public subscribe(observer: Observer<Subject>)  {\r\n    this.observers.push(observer)\r\n  }\r\n\r\n  public unsubscribe(observer: Observer<Subject>) {\r\n    remove(this.observers, observer)\r\n  }\r\n}\r\n\r\nexport class ObservableOutput<Subject> extends Emitter<Subject> implements Output<Subject> {\r\n  constructor(initialValue: Subject) {\r\n    super()\r\n    this.value = initialValue\r\n  }\r\n\r\n  protected value: Subject\r\n\r\n  public get() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nexport class ObservableValue<Subject> extends ObservableOutput<Subject> implements Input<Subject> {\r\n  public set(newValue: Subject) {\r\n    const oldValue = this.value\r\n\r\n    this.value = newValue\r\n\r\n    this.observers.forEach(observer => observer(newValue, oldValue))\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/observable-value/index.ts","import { TreeNode, TreeBranch } from \"./containers/tree\";\r\nimport { lastItem } from \"./array-utils\";\r\n\r\nexport type ItemVisitor<BranchContent, LeafContent> =\r\n  (\r\n    node: TreeNode<BranchContent, LeafContent>,\r\n    indexInBranch: number,\r\n    branchItems: TreeNode<BranchContent, LeafContent>[],\r\n    pathFromRoot: number[]\r\n  ) => void\r\n\r\nexport function traverseTree<BranchContent, LeafContent>(tree: TreeNode<BranchContent, LeafContent>, itemVisitor: ItemVisitor<BranchContent, LeafContent>) {\r\n  itemVisitor(tree, 0, [tree], [0])\r\n\r\n  if (tree.isBranch()) {\r\n    traverse(tree, itemVisitor, [0])\r\n  }\r\n}\r\n\r\nfunction traverse<BranchContent, LeafContent>(node: TreeBranch<BranchContent, LeafContent>, itemVisitor: ItemVisitor<BranchContent, LeafContent>, path: number[]) {\r\n  node\r\n    .getChildren()\r\n    .forEach((child, index, items) => {\r\n      const newPath = [...path, index]\r\n      \r\n      itemVisitor(child, index, items, newPath)\r\n\r\n      if (child.isBranch()) {\r\n        traverse(child, itemVisitor, newPath)\r\n      }\r\n    })\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/traverse-tree.ts","import { keyValuePairs } from \"./object-utils\";\r\nimport { Subject } from \"rxjs/Subject\";\r\n\r\nexport type ValidationConfig<Subject, ValidationParameters> =\r\n  {\r\n    config?: ValidationParameters\r\n  } &\r\n  (\r\n    {\r\n      check: (value: Subject) => boolean\r\n      error: string\r\n    } |\r\n    {\r\n      check: (value: Subject) => boolean\r\n      error: (value: Subject) => string\r\n    } | {\r\n      config: ValidationParameters\r\n      check: (value: Subject, config: ValidationParameters) => boolean\r\n      error: (value: Subject) => string\r\n    } | {\r\n      config: ValidationParameters\r\n      check: (value: Subject) => boolean\r\n      error: (value: Subject, config: ValidationParameters) => string\r\n    } | {\r\n      config: ValidationParameters\r\n      check: (value: Subject, config: ValidationParameters) => boolean\r\n      error: (value: Subject, config: ValidationParameters) => string\r\n    }\r\n  )\r\n\r\nexport function validate<Subject, ValidationParameters>(value: Subject, params: ValidationConfig<Subject, ValidationParameters>): string | null {\r\n  if ((params.check as any)(value, params.config)) {\r\n    return null\r\n  } else {\r\n    if (typeof params.error === 'function') {\r\n      return (params.error as any)(value, params.config)\r\n    } else {\r\n      return params.error\r\n    }\r\n  }\r\n}\r\n\r\nexport type ObjectValidationConfig<Subject> = {\r\n  [key in keyof Subject]: ValidationConfig<Subject[key], any> | null\r\n}\r\n\r\nexport interface ObjectFieldValidationError<Subject> {\r\n  field?: keyof Subject,\r\n  message: string\r\n}\r\n\r\nexport type ObjectValidationResult<Subject> = {\r\n  valid: true,\r\n  subject: Subject\r\n} | {\r\n  valid: false,\r\n  errors: ObjectFieldValidationError<Subject>[]\r\n}\r\n\r\nexport type PartialSubject<Subject> = {\r\n  [key in keyof Subject]: Subject[key] | null | undefined\r\n}\r\n\r\nexport function validateObject<Subject>(subject: PartialSubject<Subject>, validationConfig: ObjectValidationConfig<Subject>): ObjectValidationResult<Subject> {\r\n  const result = keyValuePairs(validationConfig)\r\n    .reduce(\r\n      (result, { key, value: config }) => {\r\n        const value = subject[key]\r\n\r\n        if (config != null) {\r\n          const fieldError = validate(value, config as any)\r\n          if (fieldError != null) {\r\n            return {\r\n              valid: false,\r\n              errors: result.errors.concat({\r\n                field: key,\r\n                message: fieldError\r\n              })\r\n            }\r\n          }\r\n        }\r\n\r\n        return result\r\n      },\r\n      {\r\n        valid: true as true,\r\n        errors: [] as ObjectFieldValidationError<Subject>[],\r\n      }\r\n    )\r\n  \r\n  if (result.valid) {\r\n    return {\r\n      valid: true,\r\n      errors: result.errors,\r\n      subject: subject as Subject\r\n    }\r\n  } else {\r\n    return {\r\n      valid: false,\r\n      errors: result.errors\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/validation.ts"],"sourceRoot":"webpack:///"}